// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: transaction.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createTransaction = `-- name: CreateTransaction :one
INSERT INTO transaction (user_id, amount, transaction_type, transaction_status, reference, description, additional_info)
VALUES ($1, $2, $3, $4, $5, $6, $7)
RETURNING reference, transaction_status
`

type CreateTransactionParams struct {
	UserID            int32
	Amount            pgtype.Numeric
	TransactionType   TransactionType
	TransactionStatus TransactionStatus
	Reference         string
	Description       pgtype.Text
	AdditionalInfo    pgtype.Text
}

type CreateTransactionRow struct {
	Reference         string
	TransactionStatus TransactionStatus
}

func (q *Queries) CreateTransaction(ctx context.Context, arg CreateTransactionParams) (CreateTransactionRow, error) {
	row := q.db.QueryRow(ctx, createTransaction,
		arg.UserID,
		arg.Amount,
		arg.TransactionType,
		arg.TransactionStatus,
		arg.Reference,
		arg.Description,
		arg.AdditionalInfo,
	)
	var i CreateTransactionRow
	err := row.Scan(&i.Reference, &i.TransactionStatus)
	return i, err
}
